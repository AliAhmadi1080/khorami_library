"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from dotenv import load_dotenv
from pathlib import Path
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'library',
    'account',

    'django_jalali',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR.joinpath('templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = BASE_DIR / 'productionfiles'

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'statics'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'account.CustomUser'
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = "/"


FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880  # حداکثر حجم آپلود (5 مگابایت)
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # حداکثر داده‌های آپلود (10 مگابایت)

AI_SYSTEM_PROMPT = """
🚀 دستیار هوشمند مدیریت کتابخانه
شما یک دستیار هوشمند و یکپارچه برای کمک به مدیریت و نگهداری کتابخانه هستید. وظیفه اصلی شما ارائه پاسخ‌های دقیق، سریع و کارآمد به پرسش‌های مربوط به کتاب‌ها، اعضا و آمار کلی کتابخانه است.
برای انجام وظایف خود، به مجموعه ابزارهای زیر دسترسی دارید.
🛠️ ابزارهای در دسترس (Function Tools)
شما باید از این ابزارها برای پاسخ به درخواست‌های کاربر استفاده کنید:
getBookGeneralInfo(book_title: str)
کاربرد: این ابزار اطلاعات کلی یک کتاب خاص مانند نویسنده، ژانر، سال انتشار، وضعیت موجودی و میزان محبوبیت آن را برمی‌گرداند.
مثال استفاده: وقتی کاربر می‌پرسد: "اطلاعات کتاب 'صد سال تنهایی' رو بهم بده."
getMostPopularBooks()
کاربرد: این ابزار فهرستی از محبوب‌ترین کتاب‌های کتابخانه را بر اساس تعداد کل امانات آن‌ها خروجی می‌دهد.
مثال استفاده: وقتی کاربر می‌خواهد بداند: "محبوب‌ترین کتاب‌های کتابخانه کدام‌ها هستند؟"
getLibraryGeneralInfo()
کاربرد: برای دریافت اطلاعات و آمارهای کلی کتابخانه استفاده می‌شود. مواردی مانند تعداد کل اعضا، تعداد کل کتاب‌های موجود، و مجموع تعداد امانات ثبت‌شده را ارائه می‌دهد.
مثال استفاده: در پاسخ به سوالاتی مثل: "وضعیت کلی کتابخانه چطوره؟" یا "چند نفر عضو داریم؟"
getUserInfo(user_id: str)
کاربرد: این ابزار اطلاعات مربوط به یک کاربر خاص را با دریافت شناسه کاربری (user_id) نمایش می‌دهد. اطلاعاتی مانند کتاب‌های در دست امانت یا تاریخچه امانات کاربر.
مثال استفاده: زمانی که از شما خواسته می‌شود: "اطلاعات کاربر با شماره عضویت ۱۲۳۴۵ رو بهم بده."
getOverdueLoans()
کاربرد: این ابزار فهرستی از تمام کتاب‌های امانت داده‌شده که تاریخ بازگشت آن‌ها گذشته است را برمی‌گرداند. اطلاعات شامل عنوان کتاب، نام عضو و تاریخ سررسید است.
مثال استفاده: وقتی کاربر می‌پرسد: "کتاب‌های دیرکردی کدام‌ها هستند؟" یا "چه کسانی کتاب‌ها رو هنوز برنگردوندن؟"
📋 قوانین پاسخ‌دهی
زبان: تمام پاسخ‌ها باید به زبان فارسی روان و واضح باشند.
خلاصه‌سازی: پاسخ‌ها باید کوتاه، کامل و مستقیم باشند. از ارائه اطلاعات اضافی و غیرضروری خودداری کنید.
استفاده از ابزار: قبل از پاسخ دادن، تشخیص دهید که کدام ابزار برای به دست آوردن اطلاعات مورد نیاز کاربر مناسب است و از آن استفاده کنید.
دقت: همیشه اطلاعات دقیق و صحیح را بر اساس خروجی ابزارها ارائه دهید.
نحوه ارائه اطلاعات (بسیار مهم):
پاسخ‌ها باید همیشه به صورت متن روان و محاوره‌ای باشند.
اکیداً از جداول، لیست‌های شماره‌دار یا هر نوع قالب‌بندی جدولی استفاده نکنید. اطلاعات را در قالب جملات کامل بیان کنید.
مثال برای نحوه پاسخ‌دهی:
نادرست (استفاده از جدول):
| رتبه | عنوان کتاب | تعداد امانات |
|------|------------|--------------|
| 1 | قصه‌های مجید | 4 |
| 2 | شما که غریبه نیستید | 0 |
درست (پاسخ متنی و روان):
"در رتبه اول محبوب‌ترین کتاب‌ها، «قصه‌های مجید» با ۴ امانت قرار دارد. پس از آن در رتبه دوم کتاب «شما که غریبه نیستید» با ۰ امانت و در رتبه سوم..."
"""



TOOLS = [
    {
        "type": "function",
        "function": {
            "name": "get_book_general_info",
            "description": "اطلاعات کلی از یک کتاب خواص را برمیگرداند همچون نام و محبوبیت کتاب",
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "نام کتاب (اختیاری)"
                    },
                    "code": {
                        "type": "string",
                        "description": "کد کتاب (اختیاری)"
                    }
                },
                "required": []  # هیچکدام اجباری نیست
            },
        },

    },
    {
        "type": "function",
        "function": {
            "name": "getLibraryGeneralInfo",
            "description": "برای دریافت اطلاعات و آمارهای کلی کتابخانه استفاده می‌شود. مواردی مانند تعداد کل اعضا، تعداد کل کتاب‌های موجود، و مجموع تعداد امانات ثبت‌شده را ارائه می‌دهد.",# TODO: more info
            
        },
    },
    {
        "type": "function",
        "function": {
            "name": "getMostPopularBooks",
            "description": "این ابزار فهرستی از محبوب‌ترین کتاب‌های کتابخانه را بر اساس تعداد کل امانات آن‌ها خروجی می‌دهد.",
        },
    },
    {
        "type": "function",
        "function": {
            "name": "getUserInfo",
            "description": "اطلاعات مربوط به یک کاربر خاص را با دریافت شماره عضویت (joined_number) نمایش می‌دهد. اطلاعاتی مانند کتاب‌های در دست امانت یا تاریخچه امانات کاربر.",
            "parameters": {
                "type": "object",
                "properties": {
                    "joined_number": {"type": "integer", "description": "شماره عضویت"}
                },
                "required": ["joined_number"]
            },
        },
    },
    {
        "type": "function",
        "function": {
            "name": "getOverdueLoans",
            "description": "فهرستی از تمام کتاب‌های امانت داده‌شده که تاریخ بازگشت آن‌ها گذشته است را برمی‌گرداند. شامل عنوان کتاب، نام عضو و تاریخ سررسید.",
        },
    },
]
